For this problem you may use any version of Java you wish.  Please specify the version you used.
At least one Class and method is required as documented in the problem statement below.
You may code as many Classes as you like for your solution.
Please only use core Java libraries.
Please deliver a zip file containing all the deliverables for your solution.
Source files are required and class files should not be included.

Problem Statement

Class Name: CourseScheduler
Mathod Name: scheduleCourses
Parameters: String[]
Returns: String[]

You are a student at a college with a very complex prerequisite
structure. To help you schedule your courses, you decided to put together
a program that returns the order in which the courses should be taken.

Implement a class CourseScheduler which contains a method scheduleCourses.  The
method takes a String[] that contains the courses you must take and returns a
String[] of courses in the order the courses should be taken so that all
prerequisites are met.

String[] elements will be of the form:
"COURSE: PRE1 PRE2 ..." where PRE1 and PRE2 are prerequisites of COURSE.  COURSE,
PRE1, PRE2, ... consist of a department name (3 or 4 capital letters, A-Z
inclusive) followed by a course number (an integer between 100 and 999,
inclusive).  The department name should be immediately followed by the course
number with no additional characters, numbers or spaces (i.e. MATH217).  It is
not necessary for a course to have prerequisites.  In such a case, the colon is
the last character in the String.

You can only take one course at a time, therefore, use the following rules to
determine which course to take :
1) Any prerequisite course(s) listed for a course must be taken before the course
can be taken.
2) If multiple courses can be taken at the same time, you take the one with the
lowest number first, regardless of department.
3) If multiple courses with the same number can be taken at the same time, you
take the department name which comes first in alphabetical order.
4) If the inputted course schedule has errors, return a String[] of length 0.
There is an error if it is impossible to return the courses in an order such
that all prerequisites are met, or if a prerequisite is a course that does not
have its own entry in the inputted String[].

Examples of valid input Strings are:
"CSE111: CSE110 MATH101"
"CSE110:"

Examples of invalid input Strings are:
"CS117:" (department name must consist of 3 - 4 capital letters, inclusive)
"cs117:" (department name must consist of 3 - 4 capital letters, inclusive)
"CS9E11:" (department name must be letters only)
"CSE110: " (no trailing spaces allowed)
"CSE110: CSE101 " (no trailing spaces allowed)
"MATH211: MAM2222" (course number to large)
"MATH211: MAM22" (course number to small)
"ENGIN517: MATH211" (department name to large)

Here is the method signature (be sure your method is public):
String[] scheduleCourses(String[] allCourses);

You can assume allCourses contains between 1 and 20 Strings,
inclusive, all of the form above.  The Strings will have between 1 and 50
characters, inclusive.  You can assume the syntax of the Strings are
correct: The Strings will contain a valid course name, followed by a colon,
possibly followed by a series of unique prerequisite courses separated by
single spaces.  Also, you can assume that each course has at most one
entry in the String[].

Examples:
If allCourses={
"CSE121: CSE110",
"CSE110:",
"MATH122:"
}
The method should return: {"CSE110","CSE121","MATH122"}

If allCourses={
"ENGL111: ENGL110",
"ENGL110: ENGL111"
}
The method should return: {}

If allCourses={
"ENGL111: ENGL110"
}
The method should return: {}

If allCourses={
"CSE258: CSE244 CSE243 INTR100",
"CSE221: CSE254 INTR100",
"CSE254: CSE111 MATH210 INTR100",
"CSE244: CSE243 MATH210 INTR100",
"MATH210: INTR100",
"CSE101: INTR100",
"CSE111: INTR100",
"ECE201: CSE111 INTR100",
"ECE111: INTR100",
"CSE243: CSE254",
"INTR100:"
}
The method should return:
{"INTR100","CSE101","CSE111","ECE111","ECE201","MATH210","CSE254","CSE221","CSE2
43","CSE244","CSE258"}
Definition

Class:				CourseScheduler
Method: 			scheduleCourses
Parameters:			String[]
Returns:			String[]
Method signature:	String[] scheduleCourses(String[] param0)
(be sure your method is public)